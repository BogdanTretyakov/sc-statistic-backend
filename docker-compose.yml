services:
  postgres:
    image: postgres:18-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: sc_stats
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U root -d sc_stats']
      interval: 5s
      timeout: 5s
      retries: 30
    networks:
      - app-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://root:root@postgres:5432/sc_stats?schema=public
      NODE_ENV: production
      ADMIN_LOGIN: ${ADMIN_LOGIN}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      W3C_REPLAYS_API_KEY: ${W3C_REPLAYS_API_KEY}
      WIKI_DATA_REPO: ${WIKI_DATA_REPO}
      WIKI_DATA_REPO_TOKEN: ${WIKI_DATA_REPO_TOKEN}
    volumes:
      - storage:/app/storage
    ports:
      - 80:4000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  pgdata:
    name: 'sc_stats_db'

  storage:
    name: 'sc_stats_storage'
